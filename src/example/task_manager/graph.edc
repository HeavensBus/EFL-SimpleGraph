/* Jin Sol Park
 * HeavensBus@gmail.com
 * 2014. 7. 2
 * graph.edc 
 * edje_cc graph.edc
 */ 

collections {
////////////////////// list

	group { name: "list";
		parts {
			part { name: "list_test";
		//		type: RECT;
				type: SWALLOW;
				description {
				 	state: "default" 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 1.0 ;
					align: 0.0 0.0;
					min: 0 100;
					max: -1 -1; 
					color: 109 82 238 255;
				}
			}
		}
	}

	///////////////////////graph



	group { name: "graph";
		parts {
/*cpu*/
			part { name: "spacer_1";
				type: SPACER;
	//			type: RECT;
				description {
				state: "default" 0.0;
				rel1.relative: 0.0 0.0;
				rel2.relative: 0.0 0.0;
				align: 0.0 0.0;
				min: 15 20;
				max: 15 20;
				fixed: 1 1;
		//		color: 0 255 0 255;
				}
			}
			part { name: "spacer_2";
				type: SPACER;
			//	type: RECT;
				description {
				state: "default" 0.0;
				rel1.relative: 1.0 0.0;
				rel1.to: "spacer_1";
				rel2.relative: 0.0 0.0;
				align: 0.0 0.0;
				min: 120 20;
				max: 120 20;
				fixed: 1 1;
			//	color: 0 255 255 255;
				}
			}

			part { name: "spacer_3";
				type: SPACER;
			//	type: RECT;
				description {
				state: "default" 0.0;
				rel1.relative: 0.0 1.0;
				rel1.to: "spacer_1";
				rel2.relative: 0.0 0.0;
				align: 0.0 0.0;
				min: 15 20;
				max: 15 20;
				fixed: 1 1;
			//	color: 0 111 255 255;
				}
			}

			part { name: "spacer_4";
				type: SPACER;
			//	type: RECT;
				description {
				state: "default" 0.0;
				rel1.relative: 0.0 1.0;
				rel1.to: "spacer_3";
				rel2.relative: 1.0 0.0;
				align: 0.0 0.0;
				min: 0 10;
				max: -1 10;
				fixed: 1 1;
			//	color: 0 255 0 154;
				}
			}
			part { name: "spacer_5";
				type: SPACER;
			//	type: RECT;
				description {
				state: "default" 0.0;
				rel1.relative: 0.0 1.0;
				rel1.to: "spacer_4";
				rel2.relative: 0.0 0.0;
				align: 0.0 0.0;
				min: 15 120;
				max: 100 120;
				//max: 15 120;
				fixed: 1 1;
		//		color: 0 255 0 104;
				}
			}
			part { name: "spacer_6";
				type: SPACER;
		//		type: RECT;
				description {
				state: "default" 0.0;
				rel1.relative: 0.0 1.0;
				rel1.to: "spacer_5";
				rel2.relative: 1.0 0.0;
				align: 0.0 0.0;
				min: 0 20;
				max: -1 20;
				fixed: 1 1;
		//		color: 0 255 0 73;
				}
			}
			part { name: "spacer_7";
				type: SPACER;
		//		type: RECT;
				description {
				state: "default" 0.0;
				rel1.relative: 0.0 1.0;
				rel1.to: "spacer_6";
				rel2.relative: 0.0 0.0;
				align: 0.0 0.0;
				min: 15 20;
				max: 15 20;
				fixed: 1 1;
			//	color: 0 255 0 37;
				}
			}
			part { name: "spacer_8";
				type: SPACER;
			//	type: RECT;
				description {
				state: "default" 0.0;
				rel1.relative: 0.0 1.0;
				rel1.to: "spacer_7";
				rel2.relative: 1.0 0.0;
				align: 0.0 0.0;
				min: 0 10;
				max: -1 10;
				fixed: 1 1;
			//	color: 200 255 0 255;
				}
			}
			part { name: "spacer_9";
				type: SPACER;
				//type: RECT;
				description {
				state: "default" 0.0;
				rel1.relative: 1.0 0.0;
				rel2.relative: 1.0 1.0;
				align: 0.5 0.5;
				min: 35 0;
				max: -1 -1;
				fixed: 1 1;
				//color: 200 54 0 255;
				}
			}
			part { name: "spacer_10";
				type: SPACER;
			//	type: RECT;
				description {
				state: "default" 0.0;
				rel1.relative: 0.0 1.0;
				rel1.to: "spacer_7";
				rel2.relative: 0.0 0.0;
				align: 0.0 0.0;
				min: 15 120;
				max: 100 120;
				//max: 15 120;
				fixed: 1 1;
		//		color: 0 255 0 104;
				}
			}
			part { name: "spacer_11";
				type: SPACER;
	//			type: RECT;
				description {
				state: "default" 0.0;
				rel1.relative: 0.0 1.0;
				rel1.to: "spacer_10";
				rel2.relative: 1.0 0.0;
				align: 0.0 0.0;
				min: 0 10;
				max: -1 10;
				fixed: 1 1;
			//	color: 200 255 0 255;
				}
			}
			/*
			part { name: "spacer_10";
			//	type: SPACER;
				type: RECT;
				description {
				state: "default" 0.0;
				rel1.relative: 0.0 0.0;
				//rel1.to: "spacer_7";
				rel2.relative: -0.9 0.9;
				align: 0.0 0.0;
				min: 1 200;
				max: -1 200;
				fixed: 1 1;
				color: 200 0 0 255;
				}
			}

			
			*/

			//graph rect

			part { name: "graph_bar_cpu";
				//type: RECT;
				type: SWALLOW;
				description {
				 	state: "default" 0.0;
					rel1.relative: 1.0 1.0;
					rel1.to_x: "spacer_1";
					rel1.to_y: "spacer_4";
					rel2.relative: 0.0 0.0 ;
					align: 0.0 0.0;
					min: 90 100;
					max: 90 100; 
					fixed: 1 1;
					color: 101 200 100 255;
				}
			}

			part { name: "graph_broken_cpu";
				//type: RECT;
				type: SWALLOW;
				description {
				 	state: "default" 0.0;
					rel1.relative: 1.0 1.0;
					rel1.to_x: "spacer_2";
					rel1.to_y: "spacer_4";
					rel2.relative: 0.0 0.0 ;
					rel2.to_x: "spacer_9";

					align: 0.0 0.0;
					min: 300 100;
					max: -1 100; 
					fixed: 1 1;
					color: 100 200 100 255;
				}
			}

/*mem*/
			part { name: "graph_bar_mem";
			//	type: RECT;
				type: SWALLOW;
				description {
				 	state: "default" 0.0;
					rel1.relative: 1.0 1.0;
					rel1.to_x: "spacer_1";
					rel1.to_y: "spacer_8";
					rel2.relative: 0.0 0.0 ;
					align: 0.0 0.0;
					min: 90 100;
					max: 90 100; 
					fixed: 1 1;
					color: 100 200 100 255;
				}
			}

			part { name: "graph_broken_mem";
				type: RECT;
				//type: SWALLOW;
				description {
				 	state: "default" 0.0;
					rel1.relative: 1.0 1.0;
					rel1.to_x: "spacer_2";
					rel1.to_y: "spacer_8";
					rel2.relative: 0.0 0.0 ;
					rel2.to_x: "spacer_9";
					align: 0.0 0.0;
					min: 300 100;
					max: -1 100; 
					fixed: 1 1;
					color: 0 0 0 255;
				}
			}


			part { name: "graph_control_box";
//				type: RECT;
				type: SWALLOW;
				description {
				 	state: "default" 0.0;
					rel1.relative: 1.0 1.0;
					rel1.to_x: "spacer_1";
					rel1.to_y: "spacer_11";
					rel2.relative: 0.0 0.0 ;
					rel2.to_x: "spacer_9";
					align: 0.0 0.0;
					min: 400 100;
					max: -1 100; 
					fixed: 1 1;
					color: 100 200 100 255;
				}
			}



			part { name: "text_bar_cpu";
			type: TEXT;
			scale: 1;
			description { state: "default" 0.0;
				rel1.relative: 1.0 1.0;
				rel1.to: "spacer_1";
				rel2.relative: 1.0 1.0;
				align: 0.0 0.0;
				fixed: 1 1;
				color: 0 255 0 255;
					text {
						size: 14;
						font: "Sans";
						text: "CPU Bar Graph";
						align: 0.0 0.0;
					}
				}
			}

			part { name: "text_broken_cpu";
			type: TEXT;
			scale: 1;
			description { state: "default" 0.0;
				rel1.relative: 1.0 1.0;
				rel1.to: "spacer_2";
				rel2.relative: 1.0 1.0;
				align: 0.0 0.0;
				fixed: 1 1;
				color: 0 255 0 255;
					text {
						size: 14;
						font: "Sans";
						text: "CPU Broken Graph";
						align: 0.0 0.0;
					}
				}
			}
			part { name: "text_bar_mem_test";
			type: TEXT;
			scale: 1;
			description { state: "default" 0.0;
				rel1.relative: 1.0 0.0;
				rel1.to: "spacer_7";
				rel2.relative: 1.0 1.0;
				align: 0.0 0.0;
				fixed: 1 1;
				color: 0 255 0 255;
					text {
						size: 14;
						font: "Sans";
						text: "Mem Bar Graph";
						align: 0.0 0.0;
					}
				}
			}
			part { name: "text_broken_mem";
			type: TEXT;
			scale: 1;
			description { state: "default" 0.0;
				rel1.relative: 1.0 1.0;
				rel1.to_x: "spacer_2";
				rel1.to_y: "spacer_6";
				rel2.relative: 1.0 1.0;
				align: 0.0 0.0;
				fixed: 1 1;
				color: 0 255 0 255;
					text {
						size: 14;
						font: "Sans";
						text: "Mem Broken Graph";
						align: 0.0 0.0;
					}
				}
			}
		}
	}

	group {
		name: "layout";
		//max: 400 400
		//min: 400 400

		parts {
			part { name: "part_toolbar";
//			type: RECT;
				type: SWALLOW;
				description {
				 	state: "default" 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0 ;
					align: 0.5 0.0;
					min: 0 50;
					max: -1 50; 
					fixed: 0 1;
					color: 255 0 0 255;
				}
			}
			part { name: "part_layout";
	//			type: RECT;
				type: SWALLOW;
				description {
				 	state: "default" 0.0;
					rel1.relative: 0.0 1.0;
					rel1.to: "part_toolbar";
					rel2.relative: 1.0 1.0 ;
					align: 0.5 0.0;

					color: 255 255 0 255;
				}
			}
		}
	}
}

			
